{"version":3,"sources":["Turbine.js","App.js","serviceWorker.js","index.js"],"names":["THREE","require","OrbitControls","_","metalColor","greyColor","Turbine","colors","normal","tank","shaft","disk","hub","blade","baffle","hover","props","setting","this","resetViewer","_this2","glRenderer","WebGLRenderer","canvas","refs","painter","alpha","antialias","shadowMap","enabled","clippingPlanes","Object","freeze","localClippingEnabled","animate","onAnimate","hoverArr","scene","Scene","camera","PerspectiveCamera","position","set","tankDiameter","tankHeight","add","light","PointLight","createShadowLight","controls","rotateSpeed","zoomSpeed","panSpeed","keys","addEventListener","copy","startAutoRotation","offsetX","offsetLeft","offsetY","offsetTop","raycaster","Raycaster","normalVector","Vector2","window","event","x","clientX","width","y","clientY","height","setFromCamera","intersects","intersectObjects","children","colorFormat","length","forEach","item","indexOf","object","name","material","color","setHex","onHoverObject","transEnableXY","transEnableYZ","transEnableXZ","createAxis","createTank","createShaft","blades","hubs","disks","impellerCount","i","createHub","createDisk","changeBladeCount","bladeCount","baffles","changeBaffleCount","baffleCount","createPlane","createTransPan","kernelAngle","stopAutoRotation","dispose","nextProps","setSize","aspect","updateProjectionMatrix","remove","axisGroup","kernelAutoRotation","changeImpellerCount","bladeInnerRadius","bladeOuterRadius","bladeWidth","bladeHeight","changeBladeGeometry","hubRadius","hubHeight","updateHub","diskRadius","diskHeight","updateDisk","transPanXY","changeTransPan","transPanYZ","transPanXZ","changeTransEnable","isEqual","updatePlane","updateTank","updateShaft","updateBaffles","mesh","originalColor","_this3","timerId","setInterval","kernelRotationDir","updateBlades","clearInterval","update","render","dirArr","dirLight","DirectionalLight","castShadow","shadow","near","far","right","left","top","bottom","mapSize","str","dir","font","self","dir3D","Vector3","originalPos","arrow","ArrowHelper","axisSize","geoOption","size","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","labelGeo","TextGeometry","labelMat","MeshStandardMaterial","labelMesh","Mesh","Group","Math","max","FontLoader","load","createAxisLine","grid","GridHelper","_ref","CylinderGeometry","geometry","createTankGeometry","MeshLambertMaterial","opacity","transparent","side","BackSide","shaftRadius","_ref2","createShaftGeometry","MeshPhongMaterial","DoubleSide","clipShadows","num","count","radius","createDiskGeometry","diskMesh","setImpellerPositionY","push","diskGeo","createHubGeometry","hubMesh","hubGeo","d","h","transPanMeshXY","createTranslucentPan","transPanMeshYZ","transPanMeshXZ","sizeArr","panGeo","BoxGeometry","panMat","panMesh","visible","newValue","oldValue","pop","innerRadius","outerRadius","offset","distance","yAxis","j","angle","PI","applyAxisAngle","rotation","baffleInnerRadius","_ref3","baffleOuterRadius","baffleWidth","posY","createBaffleGeometry","type","value","z","needle","haystack","uuid","target","react_default","a","createElement","ref","Component","Content","Layout","Header","Sider","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFileSelect","e","preventDefault","fileInput","click","state","canvasWidth","canvasHeight","unit","hoverObject","fileReader","FileReader","onload","jsonData","JSON","parse","result","key","idx","parseInt","substring","numBlades","bladeThickness","impeller0","importJsonData","gridx","numBaffles","thickness","numImpellers","console","log","setState","defineProperty","innerWidth","innerHeight","handleResize","removeEventListener","field","updatedInfo","map","setTimeout","checked","_this4","file","readAsText","exportJsonData","resolution","starting_step","impeller_start_angle","impeller_startup_steps_until_normal_speed","firstBaffleOffset","firstBladeOffset","uav","blade_tip_angular_vel_w0","impeller_position","jQuery","download","href","encodeURIComponent","stringify","appendTo","_this5","className","layout","style","overflowY","src_Turbine","handleHoverObject","menu","theme","mode","SubMenu","title","icon","fontWeight","Item","input_number","min","defaultValue","onChange","handleChange","toConsumableArray","Array","val","concat","handleImpellerChange","es_checkbox","handleAutoRotation","bind","es_radio","handleRadio","onClick","ev","handleSetting","id","handleFile","files","exportJsonFile","handleTransEnable","Boolean","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1cf7f6d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst THREE = require('three');\n// var TrackballControls = require('three-trackballcontrols');\nvar OrbitControls = require(\"three-orbit-controls\")(THREE);\nvar _ = require('lodash');\nvar metalColor = 0xFFFFFF;\nvar greyColor = 0xEEEEEE;\n\nclass Turbine extends Component {\n  colors = {\n    normal: {\n      tank: greyColor,\n      shaft: metalColor,\n      disk: metalColor,\n      hub: metalColor,\n      blade: metalColor,\n      baffle: metalColor\n    },\n    hover: {\n      tank: 0x0000ff,\n      shaft: 0x00ff00,\n      disk: 0x00ff00,\n      hub: 0x00ff00,\n      blade: 0x00ff00,\n      baffle: 0x00ff00\n    }\n  }\n\n  componentDidUpdate(props) {\n    switch (props.setting) {\n      case \"reset\":\n        this.resetViewer();\n        break;\n      default:\n        break;\n    };\n  }\n\n  componentDidMount() {\n    this.glRenderer = new THREE.WebGLRenderer({\n      canvas: this.refs.painter,\n      alpha: true,\n      antialias: true\n    });\n    this.glRenderer.shadowMap.enabled = true;\n\n    this.glRenderer.clippingPlanes = Object.freeze( [] ); // GUI sets it to globalPlanes\n    this.glRenderer.localClippingEnabled = true;\n    this.glRenderer.animate(() => this.onAnimate());\n\n    this.hoverArr = [ \"disk\", \"hub\", \"shaft\", \"blade\", \"baffle\"];//\"tank\",\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(45, 1, 0.1, 10000);\n    this.camera.position.set(this.props.tankDiameter /2,\n                            this.props.tankHeight,\n                            this.props.tankDiameter * 3);\n    this.scene.add(this.camera);\n\n    this.light = new THREE.PointLight(0xffffff, 0.3);\n    this.light.position.set(0, 0, this.props.tankDiameter * 3);\n    this.scene.add(this.light);\n\n    this.createShadowLight([0, 0, 1]);\n    this.createShadowLight([0, 1, 0]);\n    this.createShadowLight([1, 0, 0]);\n\n    // this.controls = new TrackballControls(this.camera, this.refs.painter);\n    this.controls = new OrbitControls(this.camera);\n\n    this.controls.rotateSpeed = 1.0;\n    this.controls.zoomSpeed = 1.2;\n    this.controls.panSpeed = 0.8;\n\n    this.controls.keys = [ 65, 83, 68 ];\n\n    this.controls.addEventListener('change', () => {\n      this.light.position.copy(this.camera.position);\n    });\n    this.startAutoRotation();\n\n    this.offsetX = this.refs.painter.offsetLeft;\n    this.offsetY = this.refs.painter.offsetTop;\n\n    this.raycaster = new THREE.Raycaster();\n    this.normalVector = new THREE.Vector2();\n    window.addEventListener('mousemove', event => {\n      // calculate mouse position in normalized device coordinates\n      // (-1 to +1) for both components\n      this.normalVector.x = ((event.clientX - this.offsetX) / this.props.width) * 2 - 1;\n      this.normalVector.y = -((event.clientY - this.offsetY) / this.props.height) * 2 + 1;\n  \n      // update the picking ray with the camera and mouse position\n      this.raycaster.setFromCamera(this.normalVector, this.camera);\n\n      // calculate objects intersecting the picking ray\n      var intersects = this.raycaster.intersectObjects(this.scene.children, true);\n      this.colorFormat();\n      if (intersects && intersects.length) {\n        intersects.forEach(item => {\n          if (this.hoverArr.indexOf(item.object.name) !== -1) {\n            item.object.material.color.setHex(0x00FF00);\n            this.props.onHoverObject(item.object.name);\n          }\n        });\n      }\n    });\n\n    this.transEnableXY = false;\n    this.transEnableYZ = false;\n    this.transEnableXZ = false;\n\n    this.createAxis(this.props.tankDiameter, this.props.tankHeight);\n\n    this.createTank();\n    this.createShaft();\n\n    this.blades = [];\n    this.hubs = [];\n    this.disks = [];\n    var impellerCount = this.props.impellerCount;\n    for (let i = 0; i < impellerCount; i++) {\n      this.blades[i] = [];\n      this.createHub(i, impellerCount);\n      this.createDisk(i, impellerCount);\n      this.changeBladeCount(this.props.bladeCount[i], 0, i);\n    }\n\n    this.baffles = [];\n    this.changeBaffleCount(this.props.baffleCount, 0);\n\n    this.createPlane();\n    this.createTransPan(this.props.tankDiameter, this.props.tankHeight);\n\n    this.kernelAngle = 0;\n  }\n\n  componentWillUnmount() {\n    this.stopAutoRotation();\n    this.controls.dispose();\n    delete this.controls;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {\n      this.glRenderer.setSize(nextProps.width, nextProps.height);\n      this.camera.aspect = nextProps.width / nextProps.height;\n      this.camera.updateProjectionMatrix();\n    }\n\n    if (nextProps.tankDiameter !== this.props.tankDiameter || nextProps.tankHeight !== this.props.tankHeight) {\n      this.scene.remove(this.axisGroup);\n      this.createAxis(nextProps.tankDiameter, nextProps.tankHeight);\n    }\n\n    if (nextProps.kernelAutoRotation && !this.props.kernelAutoRotation) {\n      this.startAutoRotation();\n    } else if (!nextProps.kernelAutoRotation && this.props.kernelAutoRotation) {\n      this.stopAutoRotation();\n    }\n\n    if (nextProps.impellerCount !== this.props.impellerCount) {\n      this.changeImpellerCount(nextProps.impellerCount, this.props.impellerCount);\n    }\n    else {\n      for (let i = 0; i < this.props.impellerCount; i++) {\n        if (nextProps.bladeCount[i] !== this.props.bladeCount[i]) {\n          this.changeBladeCount(nextProps.bladeCount[i], this.props.bladeCount[i], i);\n        }\n        if (nextProps.bladeInnerRadius[i] !== this.props.bladeInnerRadius[i] ||\n          nextProps.bladeOuterRadius[i] !== this.props.bladeOuterRadius[i] ||\n          nextProps.bladeWidth[i] !== this.props.bladeWidth[i] ||\n          nextProps.bladeHeight[i] !== this.props.bladeHeight[i]) {\n          this.changeBladeGeometry(nextProps.bladeInnerRadius[i], nextProps.bladeOuterRadius[i], nextProps.bladeWidth[i], nextProps.bladeHeight[i], i);\n        }\n        if (nextProps.hubRadius[i] !== this.props.hubRadius[i] ||\n            nextProps.hubHeight[i] !== this.props.hubHeight[i]) {\n          this.updateHub(nextProps.hubRadius[i], nextProps.hubHeight[i], i);\n        }\n        if (nextProps.diskRadius[i] !== this.props.diskRadius[i] ||\n            nextProps.diskHeight[i] !== this.props.diskHeight[i]) {\n          this.updateDisk(nextProps.diskRadius[i], nextProps.diskHeight[i], i);\n        }\n      }\n    }\n\n    if (nextProps.baffleCount !== this.props.baffleCount) {\n      this.changeBaffleCount(nextProps.baffleCount, this.props.baffleCount);\n    }\n\n    if (nextProps.transPanXY !== this.props.transPanXY)\n      this.changeTransPan(\"XY\", nextProps.transPanXY);\n    else if (nextProps.transPanYZ !== this.props.transPanYZ)\n      this.changeTransPan(\"YZ\", nextProps.transPanYZ);\n    else if (nextProps.transPanXZ !== this.props.transPanXZ)\n      this.changeTransPan(\"XZ\", nextProps.transPanXZ);\n\n    if (nextProps.transEnableXY !== this.props.transEnableXY)\n      this.changeTransEnable(\"XY\", nextProps.transEnableXY);\n    else if (nextProps.transEnableYZ !== this.props.transEnableYZ)\n      this.changeTransEnable(\"YZ\", nextProps.transEnableYZ);\n    else if (nextProps.transEnableXZ !== this.props.transEnableXZ)\n      this.changeTransEnable(\"XZ\", nextProps.transEnableXZ);\n\n    if (!_.isEqual(nextProps, this.props)) {\n      this.updatePlane(nextProps);\n      this.updateTank(nextProps);\n      this.updateShaft(nextProps);\n\n      // this.updateDisk(nextProps.diskRadius, nextProps.diskHeight);\n      // this.updateHub(nextProps.hubRadius, nextProps.hubHeight);\n      // this.updateBlades(this.props.bladeInnerRadius, this.props.bladeOuterRadius);\n\n      this.updateBaffles(nextProps);\n    }\n  }\n\n  colorFormat() {\n    this.scene.children.forEach(mesh => {\n      if (mesh && mesh.material && mesh.originalColor) {\n        mesh.material.color.setHex(mesh.originalColor);\n      }\n    });\n  }\n\n  startAutoRotation() {\n    this.timerId = window.setInterval(() => {\n      switch (this.props.kernelRotationDir) {\n        case 'clockwise':\n          this.kernelAngle = (this.kernelAngle + 4) % 360;\n          for (let i = 0; i < this.props.impellerCount; i++) {\n            this.updateBlades(this.props.bladeInnerRadius[i], this.props.bladeOuterRadius[i], i);\n          }\n          \n          break;\n        case 'counter-clockwise':\n          this.kernelAngle = (this.kernelAngle - 4) % 360;\n          for (let i = 0; i < this.props.impellerCount; i++) {\n            this.updateBlades(this.props.bladeInnerRadius[i], this.props.bladeOuterRadius[i], i);\n          }\n          break;\n        default:\n          break;\n      }\n    }, 60);\n  }\n\n  stopAutoRotation() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  onAnimate() {\n    // we will get this callback every frame\n\n    // pretend cubeRotation is immutable.\n    // this helps with updates and pure rendering.\n    // React will be sure that the rotation has now updated.\n    // this.setState({\n    //   cubeRotation: new THREE.Euler(\n    //     this.props.cubeRotation.x + 0.1,\n    //     this.props.cubeRotation.y + 0.1,\n    //     0\n    //   )\n    // });\n    this.controls.update();\n    this.glRenderer.render(this.scene, this.camera);\n  }\n\n  createShadowLight(dirArr) {\n    var dis = 3000;\n    var dirLight = new THREE.DirectionalLight( 0x55505a, 1 );\n    dirLight.position.set( dis* dirArr[0], dis* dirArr[1], dis* dirArr[2] );\n    dirLight.castShadow = true;\n    dirLight.shadow.camera.near = 1;\n    dirLight.shadow.camera.far = 9000;\n\n    dirLight.shadow.camera.right = 1;\n    dirLight.shadow.camera.left = - 1;\n    dirLight.shadow.camera.top\t= 1;\n    dirLight.shadow.camera.bottom = - 1;\n\n    dirLight.shadow.mapSize.width = 1024;\n    dirLight.shadow.mapSize.height = 1024;\n    this.scene.add( dirLight );\n  }\n\n  createAxisLine(str, dir, color, font, self) {\n    var dir3D = new THREE.Vector3(dir[0], dir[1], dir[2]);\n    var originalPos = new THREE.Vector3(0, 0, 0);\n    var arrow = new THREE.ArrowHelper(dir3D, originalPos, self.axisSize, color, 20, 10);\n    arrow.name = str;\n    self.axisGroup.add(arrow);\n\n    var geoOption = {\n      font: font,\n      size: 15,\n      height: 2,\n      curveSegments: 12,\n      bevelEnabled: true,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 5\n    };\n    var labelGeo = new THREE.TextGeometry(str, geoOption);\n    var labelMat = new THREE.MeshStandardMaterial({color:color});\n    var labelMesh = new THREE.Mesh(labelGeo, labelMat);\n    labelMesh.position.set(dir[0] * (self.axisSize + 10),\n                           dir[1] * (self.axisSize + 10),\n                           dir[2] * (self.axisSize + 10) );\n    self.axisGroup.add(labelMesh);\n  }\n\n  createAxis(tankDiameter, tankHeight) {\n    this.axisGroup = new THREE.Group();\n    this.scene.add(this.axisGroup);\n\n    this.axisSize = Math.max(tankDiameter, tankHeight);\n\n    var self = this;\n    var fontLoader = new THREE.FontLoader();\n    fontLoader.load('fonts/helvetiker_regular.typeface.json', font => {\n      self.createAxisLine(\"X\", [1, 0, 0], 0xFF0000, font, self);\n      self.createAxisLine(\"Y\", [0, -1, 0], 0x00FF00, font, self);\n      self.createAxisLine(\"Z\", [0, 0, -1], 0x0000FF, font, self);\n    });\n\n    this.axisGroup.position.set(tankDiameter/-2, tankHeight/2, tankDiameter/2);\n\n  }\n\n  createPlane() {\n    this.grid = new THREE.GridHelper(1000, 50);\n    this.grid.position.y = -(this.props.tankHeight / 2);\n    this.scene.add(this.grid);\n  }\n\n  updatePlane(props) {\n    this.grid.position.y = -(props.tankHeight / 2);\n  }\n\n  createTankGeometry({ tankDiameter, tankHeight }) {\n    return new THREE.CylinderGeometry(tankDiameter / 2, tankDiameter / 2, tankHeight, 30);\n  }\n\n  createTank() {\n    var geometry = this.createTankGeometry(this.props);\n    var material = new THREE.MeshLambertMaterial({\n      color: greyColor,\n      opacity: 0.3,\n      transparent: true,\n      side: THREE.BackSide\n      // clippingPlanes: [],\n      // clipShadows: true\n    });\n    this.tank = new THREE.Mesh(geometry, material);\n    this.tank.name = \"tank\";\n    this.tank.originalColor = greyColor;\n    this.scene.add(this.tank);\n  }\n\n  updateTank(props) {\n    delete this.tank.geometry;\n    this.tank.geometry = this.createTankGeometry(props);\n  }\n\n  createShaftGeometry({ shaftRadius, tankHeight }) {\n    return new THREE.CylinderGeometry(shaftRadius, shaftRadius, tankHeight, 30);\n  }\n\n  createShaft() {\n    var geometry = this.createShaftGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: metalColor,\n      side: THREE.DoubleSide,\n      clippingPlanes: [],\n      clipShadows: true\n    });\n    this.shaft = new THREE.Mesh(geometry, material);\n    this.shaft.name = \"shaft\";\n    this.shaft.originalColor = metalColor;\n    this.scene.add(this.shaft);\n  }\n\n  updateShaft(props) {\n    delete this.shaft.geometry;\n    this.shaft.geometry = this.createShaftGeometry(props);\n  }\n\n  createDiskGeometry(diskRadius, diskHeight ) {\n    return new THREE.CylinderGeometry(diskRadius, diskRadius, diskHeight, 30);\n  }\n\n  createDisk(num, count) {\n    if (!this.props.diskRadius[num] || this.props.diskHeight[num]) {\n      this.props.diskRadius[num] = this.props.diskRadius[0];\n      this.props.diskHeight[num] = this.props.diskHeight[0];\n    }\n    var radius = this.props.diskRadius[num], height = this.props.diskHeight[num];\n    var geometry = this.createDiskGeometry(radius, height);\n    var material = new THREE.MeshPhongMaterial({\n      color: metalColor,\n      side: THREE.DoubleSide,\n      // clippingPlanes: [],\n      // clipShadows: true\n    });\n    var diskMesh = new THREE.Mesh(geometry, material);\n    diskMesh.position.y = this.setImpellerPositionY(num, count);\n    diskMesh.name = \"disk\" + num;\n    diskMesh.originalColor = metalColor;\n    this.disks.push(diskMesh);\n    this.scene.add(diskMesh);\n  }\n\n  updateDisk(radius, height, num) {\n    var diskGeo = this.createDiskGeometry(radius, height);\n    delete this.disks[num].geometry;\n    this.disks[num].geometry = diskGeo;\n  }\n\n  createHubGeometry(hubRadius, hubHeight) {\n    return new THREE.CylinderGeometry(hubRadius, hubRadius, hubHeight, 30);\n  }\n\n  createHub(num, count) {\n    if (!this.props.hubRadius[num] || this.props.hubHeight[num]) {\n      this.props.hubRadius[num] = this.props.hubRadius[0];\n      this.props.hubHeight[num] = this.props.hubHeight[0];\n    }\n    var radius = this.props.hubRadius[num], height = this.props.hubHeight[num];\n    var geometry = this.createHubGeometry(radius, height);\n    var material = new THREE.MeshPhongMaterial({\n      color: metalColor,\n      side: THREE.DoubleSide,\n      // clippingPlanes: [],\n      // clipShadows: true\n    });\n    var hubMesh = new THREE.Mesh(geometry, material);\n    hubMesh.position.y = this.setImpellerPositionY(num, count);\n    hubMesh.name = \"hub\" + num;\n    hubMesh.originalColor = metalColor;\n    this.hubs.push(hubMesh);\n    this.scene.add(hubMesh);\n  }\n\n  updateHub(radius, height, num) {\n    var hubGeo = this.createHubGeometry(radius, height);\n    delete this.hubs[num].geometry;\n    this.hubs[num].geometry = hubGeo;\n  }\n\n  setImpellerPositionY(num, count) {\n    var tankHeight = this.props.tankHeight;\n    return tankHeight/-2 + tankHeight/(count + 1) * (num + 1);\n  }\n\n  createTransPan(d, h) {\n    var thickness = 2;\n    this.transPanMeshXY = this.createTranslucentPan([d * 1.1, h * 1.1, thickness]);\n    this.transPanMeshYZ = this.createTranslucentPan([thickness, h * 1.1, d * 1.1]);\n    this.transPanMeshXZ = this.createTranslucentPan([d * 1.1, thickness, d * 1.1]);\n    this.scene.add(this.transPanMeshXY);\n    this.scene.add(this.transPanMeshYZ);\n    this.scene.add(this.transPanMeshXZ);\n  }\n\n  createTranslucentPan(sizeArr) {\n    var panGeo = new THREE.BoxGeometry(sizeArr[0], sizeArr[1], sizeArr[2]);\n    var panMat = new THREE.MeshPhongMaterial({\n          color : 0x0000FF,\n          side: THREE.DoubleSide,\n          transparent : true,\n          opacity : 0.8\n        });\n    var panMesh = new THREE.Mesh(panGeo, panMat);\n    panMesh.name = \"transPan\";\n    panMesh.visible = false;\n    return panMesh;\n  }\n\n  changeBladeCount(newValue, oldValue, num) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.blades[num][i]);\n        this.blades[num].pop();\n        delete this.blades[num][i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var blade = new THREE.BoxGeometry(this.props.bladeWidth[num],\n                                          this.props.bladeHeight[num],\n                                          this.props.bladeOuterRadius[num] - this.props.bladeInnerRadius[num]);\n        var material = new THREE.MeshPhongMaterial({\n                color: greyColor,\n                side: THREE.DoubleSide,\n                // clippingPlanes: [],\n                // clipShadows: true\n              });\n        var mesh = new THREE.Mesh(blade, material);\n        this.blades[num].push(mesh);\n        mesh.name = \"blade\"+num;\n        mesh.originalColor = greyColor;\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  changeBladeGeometry(innerRadius, outerRadius, width, height, num) {\n    for (var i = 0; i < this.blades[num].length; i++) {\n      delete this.blades[num][i].geometry;\n      this.blades[num][i].geometry = new THREE.BoxGeometry(width, height, outerRadius - innerRadius);\n    }\n  }\n\n  updateBlades(innerRadius, outerRadius, num) {\n    var distance = (innerRadius + outerRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    var offset, count = this.props.impellerCount;\n    offset = new THREE.Vector3(0, this.setImpellerPositionY(num, count), 0);\n    for (var j = 0; j < this.blades[num].length; j++) {\n      var angle = (360 * j / this.blades[num].length + this.kernelAngle) % 360;\n      angle = 2 * Math.PI * angle / 360;\n      this.blades[num][j].position.set(0, 0, distance);\n      this.blades[num][j].position.applyAxisAngle(yAxis, angle);\n      this.blades[num][j].position.add(offset);\n      this.blades[num][j].rotation.set(0, angle, 0);\n    }\n  }\n\n  createBaffleGeometry({ baffleInnerRadius, baffleOuterRadius, baffleWidth, tankHeight }) {\n    return new THREE.BoxGeometry(baffleWidth, tankHeight, baffleOuterRadius - baffleInnerRadius);\n  }\n\n  changeImpellerCount(newValue, oldValue) {\n    var posY, i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= 0; i--) {\n        if (i < newValue) {\n          posY = this.setImpellerPositionY(i, newValue);\n          this.hubs[i].position.y = posY;\n          this.disks[i].position.y = posY;\n        }\n        else {\n          this.scene.remove(this.hubs[i]);\n          this.hubs.pop();\n          this.scene.remove(this.disks[i]);\n          this.disks.pop();\n          for (var j = this.props.bladeCount[i] - 1; j >= 0; j--) {\n            this.scene.remove(this.blades[i][j]);\n            // this.blades[i].pop();\n            // delete this.blades[i][j];\n          }\n          this.blades.pop();\n          // delete this.hubs[i];\n          // delete this.disks[i];\n          // delete this.blades[i];\n        }\n      }\n    } else if (newValue > oldValue) {\n      for (i = 0; i < newValue; i++) {\n        posY = this.setImpellerPositionY(i, newValue);\n        if (i < oldValue) {\n          this.hubs[i].position.y = posY;\n          this.disks[i].position.y = posY;\n          for (let j = 0; j < this.props.bladeCount; j++) {\n            this.blades[i][j].position.y = posY;\n          }\n        }\n        else {\n          this.createHub(i, newValue);\n          this.createDisk(i, newValue);\n          this.blades[i] = [];\n          this.props.bladeCount[i] = this.props.bladeCount[0];\n          this.props.bladeWidth[i] = this.props.bladeWidth[0];\n          this.props.bladeHeight[i] = this.props.bladeHeight[0];\n          this.props.bladeOuterRadius[i] = this.props.bladeOuterRadius[0];\n          this.props.bladeInnerRadius[i] = this.props.bladeInnerRadius[0];\n          this.changeBladeCount(this.props.bladeCount[i], 0, i);\n        }\n      }\n    }\n\n  }\n\n  changeBaffleCount(newValue, oldValue) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.baffles[i]);\n        this.baffles.pop();\n        delete this.baffles[i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var baffle = this.createBaffleGeometry(this.props);\n        var material = new THREE.MeshPhongMaterial({\n                    color: greyColor,\n                    side: THREE.DoubleSide,\n                    // clippingPlanes: [],\n                    // clipShadows: true\n                  });\n        var mesh = new THREE.Mesh(baffle, material);\n        this.baffles.push(mesh);\n        mesh.name = \"baffle\";\n        mesh.originalColor = greyColor;\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  changeTransPan(type, value) {\n    if (type === \"XY\") {\n      this.transPanMeshXY.position.z = value;\n    } \n    else if (type === \"YZ\") {\n      this.transPanMeshYZ.position.x = value;\n    } \n    else if (type === \"XZ\") {\n      this.transPanMeshXZ.position.y = value;\n    }\n  }\n\n  changeTransEnable (type, value) {\n    if (type === \"XY\") \n      this.transEnableXY = value;\n    else if (type === \"YZ\")\n      this.transEnableYZ = value;\n    else if (type === \"XZ\")\n      this.transEnableXZ = value;\n    this.transPanMeshXY.visible = this.transEnableXY;\n    this.transPanMeshYZ.visible = this.transEnableYZ;\n    this.transPanMeshXZ.visible = this.transEnableXZ;\n  }\n\n  updateBaffles(props) {\n    const { baffleInnerRadius, baffleOuterRadius } = props;\n    var distance = (baffleInnerRadius + baffleOuterRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    for (var i = 0; i < this.baffles.length; i++) {\n      delete this.baffles[i].geometry;\n      this.baffles[i].geometry = this.createBaffleGeometry(props);\n      var angle = 2 * Math.PI * i / this.baffles.length;\n      this.baffles[i].position.set(0, 0, distance);\n      this.baffles[i].position.applyAxisAngle(yAxis, angle);\n      this.baffles[i].rotation.set(0, angle, 0);\n    }\n  }\n\n  checkFirstObject(needle, haystack) {\n    if (haystack.length > 0) {\n      return needle.uuid === haystack[0].object.uuid;\n    } else {\n      return false;\n    }\n  }\n\n  resetViewer() {\n    this.camera.position.set(this.props.tankDiameter /2, this.props.tankHeight, this.props.tankDiameter * 3);\n    this.controls.target.set(0, 0, 0);\n  }\n\n  render() {\n    return (\n      <canvas ref=\"painter\" width={this.props.width} height={this.props.height}></canvas>\n    );\n  }\n}\n\nTurbine.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  tankDiameter: PropTypes.number.isRequired,\n  tankHeight: PropTypes.number.isRequired,\n  shaftRadius: PropTypes.number.isRequired,\n  kernelAutoRotation: PropTypes.bool,\n  kernelRotationDir: PropTypes.string,\n  baffleCount: PropTypes.number.isRequired,\n  baffleInnerRadius: PropTypes.number.isRequired,\n  baffleOuterRadius: PropTypes.number.isRequired,\n\n  impellerCount : PropTypes.number.isRequired,\n  hubRadius: PropTypes.array.isRequired,\n  hubHeight: PropTypes.array.isRequired,\n  diskRadius: PropTypes.array.isRequired,\n  diskHeight: PropTypes.array.isRequired,\n  bladeCount: PropTypes.array.isRequired,\n  bladeInnerRadius: PropTypes.array.isRequired,\n  bladeOuterRadius: PropTypes.array.isRequired,\n  bladeWidth: PropTypes.array.isRequired,\n  bladeHeight: PropTypes.array.isRequired,\n\n  transPanXY: PropTypes.number.isRequired,\n  transPanYZ: PropTypes.number.isRequired,\n  transPanXZ: PropTypes.number.isRequired,\n  transEnableXY: PropTypes.bool,\n  transEnableYZ: PropTypes.bool,\n  transEnableXZ: PropTypes.bool,\n  baffleWidth: PropTypes.number.isRequired,\n  onHoverObject: PropTypes.func\n};\n\nexport default Turbine;\n","import React, { Component } from 'react';\nimport { Checkbox, Icon, InputNumber, Layout, Menu, Radio } from 'antd';\nimport Turbine from './Turbine';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport jQuery from 'jquery';\n\nconst { Content, Header, Sider } = Layout;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const unit = 300;\n    this.state = {\n      canvasWidth: 50,\n      canvasHeight: 50,\n      tankDiameter: unit,\n      tankHeight: unit,\n      shaftRadius: unit * 2 / 75,\n      kernelAutoRotation: true,\n      kernelRotationDir: 'clockwise',\n      baffleCount: 4,\n      baffleInnerRadius: unit * 2 / 5,\n      baffleOuterRadius: unit / 2,\n      baffleWidth: unit / 75,\n\n      impellerCount: 3,\n      hubRadius: [unit * 4 / 75, unit * 4 / 75, unit * 4 / 75],\n      hubHeight: [unit / 15, unit / 15, unit / 15],\n      diskRadius: [unit / 8, unit / 8, unit / 8],\n      diskHeight: [unit / 75, unit / 75, unit / 75],\n      bladeCount: [6, 6, 6],\n      bladeInnerRadius: [unit / 12, unit / 12, unit / 12],\n      bladeOuterRadius: [unit / 6, unit / 6, unit / 6],\n      bladeWidth: [unit / 75, unit / 75, unit / 75],\n      bladeHeight: [unit / 15, unit / 15, unit / 15],\n\n      transPanXY: 0,\n      transPanYZ: 0,\n      transPanXZ: 0,\n      transEnableXY: false,\n      transEnableYZ: false,\n      transEnableXZ: false,\n      hoverObject: '',\n      setting:''\n    };\n    this.fileReader = new FileReader();\n    this.fileReader.onload = (event) => {\n      // or do whatever manipulation you want on JSON.parse(event.target.result) here.\n\n      var jsonData = JSON.parse(event.target.result);\n\n      var hubRadius = [];\n      var hubHeight = [];\n      var diskRadius = [];\n      var diskHeight = [];\n      var bladeCount = [];\n      var bladeInnerRadius = [];\n      var bladeOuterRadius = [];\n      var bladeWidth = [];\n      var bladeHeight = [];\n\n      var keyArr = Object.keys(jsonData);\n  \n      keyArr.forEach(key => {\n        if (key.indexOf(\"impeller\") > -1) {\n          var idx = parseInt(key.substring(8));\n          hubRadius[idx] = jsonData[key].hub.radius;\n          hubHeight[idx] = jsonData[key].hub.top\n          diskRadius[idx] = jsonData[key].disk.radius;\n          diskHeight[idx] = jsonData[key].disk.top;\n          bladeCount[idx] = jsonData[key].numBlades;\n          bladeInnerRadius[idx] = jsonData[key].blades.innerRadius;\n          bladeOuterRadius[idx] = jsonData[key].blades.outerRadius;\n          bladeWidth[idx] = jsonData[key].blades.bladeThickness;\n          bladeHeight[idx] = jsonData[key].blades.top;\n        }\n      });\n      var impeller0 = jsonData.impeller0;\n      var importJsonData = {\n        tankDiameter: jsonData.tankDiameter,\n        tankHeight: jsonData.gridx,\n        shaftRadius: jsonData.shaft.radius,\n        baffleCount: jsonData.baffles.numBaffles,\n        baffleInnerRadius: jsonData.baffles.innerRadius,\n        baffleOuterRadius: jsonData.baffles.outerRadius,\n        baffleWidth: jsonData.baffles.thickness,\n\n        impellerCount : jsonData.numImpellers,\n        hubRadius: hubRadius,\n        hubHeight: hubHeight,\n        diskRadius: diskRadius,\n        diskHeight: diskHeight,\n        bladeCount: bladeCount,\n        bladeInnerRadius: bladeInnerRadius,\n        bladeOuterRadius: bladeOuterRadius,\n        bladeWidth: bladeWidth,\n        bladeHeight: bladeHeight,\n      };\n      console.log(importJsonData);\n      Object.keys(importJsonData).forEach(key => {\n        this.setState({ [key]: importJsonData[key] });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      canvasWidth: window.innerWidth - 320,\n      canvasHeight: window.innerHeight - 64\n    });\n    this.handleResize = () => {\n      this.setState({\n        canvasWidth: window.innerWidth - 320,\n        canvasHeight: window.innerHeight - 64\n      });\n    }\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleChange(field, value) {\n    this.setState({ [field]: value });\n  }\n  handleImpellerChange(field, value, num) {\n    const updatedInfo = this.state[field].map((item, idx) => {\n      if(idx === num) {\n        item = value;\n      }\n      return item;\n    })\n    this.setState({[field]: updatedInfo});\n  }\n  handleTransEnable(field, value) {\n    setTimeout(() => {\n      this.setState({ [field]: value.target.checked });\n    }, 100);\n    \n  }\n\n  handleAutoRotation(event) {\n    this.setState({ kernelAutoRotation: event.target.checked });\n  }\n\n  handleRadio(event) {\n    this.setState({ kernelRotationDir: event.target.value });\n  }\n\n  handleHoverObject(name) {\n    this.setState({ hoverObject: name });\n  }\n\n  handleSetting(type) {\n    this.setState({setting:type});\n    setTimeout(() => {\n      this.setState({setting:''});\n    }, 100);\n  }\n\n  handleFileSelect = (e) => {\n    e.preventDefault();\n    this.refs.fileInput.click();\n  }\n\n  handleFile(file) {\n    this.fileReader.readAsText(file);\n  }\n\n  exportJsonFile() {\n    // kernelAutoRotation={this.state.kernelAutoRotation}\n    // kernelRotationDir={this.state.kernelRotationDir}\n    var exportJsonData = {\n      name: \"GeometryConfig\",\n      gridx: this.state.tankHeight,\n      resolution: \"0.699999988\",\n      tankDiameter: this.state.tankDiameter,\n      starting_step: 0,\n      impeller_start_angle: 0,\n      impeller_startup_steps_until_normal_speed: 0,\n      baffles: {\n          numBaffles: this.state.baffleCount,\n          firstBaffleOffset: \"0.785398185\",\n          innerRadius: this.state.baffleInnerRadius,\n          outerRadius: this.state.baffleOuterRadius,\n          thickness: this.state.baffleWidth\n      },\n      numImpellers: this.state.impellerCount,\n      shaft: {\n          radius: this.state.shaftRadius\n      }\n    };\n\n    for (let i = 0; i < this.state.impellerCount; i++) {\n      var keyStr = \"impeller\"+i;\n      exportJsonData[keyStr] = {\n        numBlades: this.state.bladeCount[i],\n        firstBladeOffset: 0,\n        uav: \"0.100000001\",\n        blade_tip_angular_vel_w0: \"0.00588235306\",\n        impeller_position: this.state.tankDiameter/(this.state.impellerCount + 1) * (i + 1),\n        blades: {\n            innerRadius: this.state.bladeInnerRadius[i],\n            outerRadius: this.state.bladeOuterRadius[i],\n            bottom: \"71.4000015\",\n            top: this.state.bladeHeight[i],\n            bladeThickness: this.state.bladeWidth[i]\n        },\n        disk: {\n            radius: this.state.diskRadius[i],\n            bottom: \"68.6800003\",\n            top: this.state.diskHeight[i]\n        },\n        hub: {\n            radius: this.state.hubRadius[i],\n            bottom: \"71.4000015\",\n            top: this.state.hubHeight[i]\n        }\n      }\n    }\n\n    jQuery(\"<a />\", {\n      \"download\": \"data.json\",\n      \"href\" : \"data:application/json,\" + encodeURIComponent(JSON.stringify(exportJsonData))\n    }).appendTo(\"body\")\n    .click(function() {\n      jQuery(this).remove()\n    })[0].click();\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Layout style={{ height: '100%' }}>\n          <Layout>\n            <Header>\n              <h1>Turbulent Dynamics</h1>\n            </Header>\n            <Content style={{ overflowY: 'hidden' }}>\n              <Turbine\n                width={this.state.canvasWidth}\n                height={this.state.canvasHeight}\n                tankDiameter={this.state.tankDiameter}\n                tankHeight={this.state.tankHeight}\n                shaftRadius={this.state.shaftRadius}\n                kernelAutoRotation={this.state.kernelAutoRotation}\n                kernelRotationDir={this.state.kernelRotationDir}\n                baffleCount={this.state.baffleCount}\n                baffleInnerRadius={this.state.baffleInnerRadius}\n                baffleOuterRadius={this.state.baffleOuterRadius}\n                baffleWidth={this.state.baffleWidth}\n\n                impellerCount={this.state.impellerCount}\n                hubRadius={this.state.hubRadius}\n                hubHeight={this.state.hubHeight}\n                diskRadius={this.state.diskRadius}\n                diskHeight={this.state.diskHeight}\n                bladeCount={this.state.bladeCount}\n                bladeInnerRadius={this.state.bladeInnerRadius}\n                bladeOuterRadius={this.state.bladeOuterRadius}\n                bladeWidth={this.state.bladeWidth}\n                bladeHeight={this.state.bladeHeight}\n\n                transPanXY={this.state.transPanXY}\n                transPanYZ={this.state.transPanYZ}\n                transPanXZ={this.state.transPanXZ}\n                transEnableXY={this.state.transEnableXY}\n                transEnableYZ={this.state.transEnableYZ}\n                transEnableXZ={this.state.transEnableXZ}\n                onHoverObject={name => this.handleHoverObject(name)}\n                setting={this.state.setting}\n              />\n            </Content>\n          </Layout>\n          <Sider width={320} style={{ overflowY: 'auto' }}>\n            <div className=\"logo\"></div>\n            <Menu theme=\"dark\" mode=\"inline\">\n              <Menu.SubMenu className=\"subMenu\" key=\"tank\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'tank' ? 'environment' : 'mail'} />\n                  <span style={{fontWeight: this.state.hoverObject === 'tank' ? 'bold' : 'normal'}}>Tank</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem1\">\n                  <span>Diameter</span>\n                  <InputNumber size=\"small\" min={100} defaultValue={this.state.tankDiameter} onChange={(value) => this.handleChange('tankDiameter', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem2\">\n                  <span>Height</span>\n                  <InputNumber size=\"small\" min={100} defaultValue={this.state.tankHeight} onChange={(value) => this.handleChange('tankHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu className=\"subMenu\" key=\"shaft\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'shaft' ? 'environment' : 'mail'} />\n                  <span style={{fontWeight: this.state.hoverObject === 'shaft' ? 'bold' : 'normal'}}>Shaft</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem3\">\n                  <span>Radius</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.shaftRadius} onChange={(value) => this.handleChange('shaftRadius', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu className=\"subMenu\" key=\"baffle\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'baffle' ? 'environment' : 'mail'} />\n                  <span style={{fontWeight: this.state.hoverObject === 'baffle' ? 'bold' : 'normal'}}>Baffle</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem15\">\n                  <span>Count</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.baffleCount} onChange={(value) => this.handleChange('baffleCount', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem16\">\n                  <span>Inner Radius</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.baffleInnerRadius} onChange={(value) => this.handleChange('baffleInnerRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem17\">\n                  <span>Outer Radius</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.baffleOuterRadius} onChange={(value) => this.handleChange('baffleOuterRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem18\">\n                  <span>Width</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.baffleWidth} onChange={(value) => this.handleChange('baffleWidth', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu className=\"subMenu\" key=\"impellers\" title={\n                <span><Icon type={'mail'} /><span>Impeller Count</span></span>\n              }>\n                <Menu.Item key=\"impellerCount\">\n                  <span>Count</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.impellerCount} onChange={(value) => this.handleChange('impellerCount', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n\n              {[...Array(this.state.impellerCount)].map((val, idx) => {\n                return (\n                  <Menu.SubMenu className=\"subMenu\" key={`impeller-${idx}`} title={\n                    <span><Icon type={'mail'} /><span>Impeller {idx + 1}</span></span>\n                  }>\n\n                    <Menu.SubMenu className=\"subMenu\" key={`hub-${idx}`} title={\n                      <span><Icon type={'mail'} /><span>Hub</span></span>\n                    }>\n                      <Menu.Item key={`hubRadius-${idx}`}>\n                        <span>Radius</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.hubRadius[0]} onChange={(value) => this.handleImpellerChange('hubRadius', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`hubHeight-${idx}`}>\n                        <span>Height</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.hubHeight[0]} onChange={(value) => this.handleImpellerChange('hubHeight', value, idx)} />\n                      </Menu.Item>\n                    </Menu.SubMenu>\n                    <Menu.SubMenu className=\"subMenu\" key={`disk-${idx}`} title={\n                      <span><Icon type={'mail'} /><span>Disk</span></span>\n                    }>\n                      <Menu.Item key={`diskRadius-${idx}`}>\n                        <span>Radius</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.diskRadius[0]} onChange={(value) => this.handleImpellerChange('diskRadius', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`diskHeight-${idx}`}>\n                        <span>Height</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.diskHeight[0]} onChange={(value) => this.handleImpellerChange('diskHeight', value, idx)} />\n                      </Menu.Item>\n                    </Menu.SubMenu>\n                    <Menu.SubMenu className=\"subMenu\" key={`blade-${idx}`} title={\n                      <span><Icon type={'mail'} /><span>Blade</span>\n                      </span>\n                    }>\n                      <Menu.Item key={`bladeCount-${idx}`}>\n                        <span>Count</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.bladeCount[0]} onChange={(value) => this.handleImpellerChange('bladeCount', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`bladeInnerRadius-${idx}`}>\n                        <span>Inner Radius</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.bladeInnerRadius[0]} onChange={(value) => this.handleImpellerChange('bladeInnerRadius', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`bladeOuterRadius-${idx}`}>\n                        <span>Outer Radius</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.bladeOuterRadius[0]} onChange={(value) => this.handleImpellerChange('bladeOuterRadius', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`bladeWidth-${idx}`}>\n                        <span>Width</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.bladeWidth[0]} onChange={(value) => this.handleImpellerChange('bladeWidth', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`bladeHeight-${idx}`}>\n                        <span>Height</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.bladeHeight[0]} onChange={(value) => this.handleImpellerChange('bladeHeight', value, idx)} />\n                      </Menu.Item>\n                    </Menu.SubMenu>\n\n                  </Menu.SubMenu>\n                )\n              })}\n\n              <Menu.SubMenu className=\"subMenu\" key=\"autoRotate\" title={\n                <span><Icon type={'mail'} /><span>Auto Rotate</span></span>\n              }>\n                <Menu.Item key=\"bladeAutoRotate\">\n                  <Checkbox checked={this.state.kernelAutoRotation} onChange={this.handleAutoRotation.bind(this)}>\n                    <span className=\"ant-menu-control\">Auto Rotation</span>\n                  </Checkbox>\n                </Menu.Item>\n                <Menu.Item key=\"bladeKernel\">\n                  <Radio.Group onChange={this.handleRadio.bind(this)} value={this.state.kernelRotationDir}>\n                    <Radio value=\"clockwise\">\n                      <span className=\"ant-menu-control\">Clockwise</span>\n                    </Radio>\n                    <Radio value=\"counter-clockwise\">\n                      <span className=\"ant-menu-control\">Counter-Clockwise</span>\n                    </Radio>\n                  </Radio.Group>\n                </Menu.Item>\n              </Menu.SubMenu>\n\n\n              <Menu.SubMenu className=\"setting subMenu\" key=\"setting\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'setting' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'setting' ? 'bold' : 'normal'\n                  }}>Setting</span>\n                </span>\n              }>\n                <div className=\"setting-item\">\n                  <button onClick={ev => {this.handleSetting(\"reset\")}}>Reset Camera</button>\n                </div>\n                <div><input id=\"fileInput\" ref=\"fileInput\" type=\"file\" onChange={ (e) => this.handleFile(e.target.files[0]) } /></div>\n                <div className=\"setting-item\">\n                  <button onClick={this.handleFileSelect}>Load Json</button>\n                </div>\n                <div className=\"setting-item\">\n                  <button onClick={this.exportJsonFile.bind(this)}>Save Json</button>\n                </div>\n              </Menu.SubMenu>\n              <Menu.SubMenu className=\"translucent subMenu\" key=\"translucent\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'translucent' ? 'environment' : 'mail'} />\n                  <span style={{fontWeight: this.state.hoverObject === 'translucent' ? 'bold' : 'normal'}}>Translucent</span>\n                </span>\n              }>\n                <Menu.Item className=\"testClass\" key=\"menuitem15\">\n                  <span className=\"trans-pan\">XY Side Enable</span>\n                  <Checkbox className=\"transCheck\" onChange={(value) => this.handleTransEnable('transEnableXY', value)}></Checkbox>\n                  <InputNumber size=\"small\" min={this.state.tankDiameter * -0.5} max={this.state.tankDiameter * 0.5} defaultValue={this.state.transPanXY} onChange={(value) => this.handleChange('transPanXY', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem16\">\n                  <span className=\"trans-pan\">YZ Side Enable</span>\n                  <Checkbox className=\"transCheck\" onChange={(value) => this.handleTransEnable('transEnableYZ', value)}></Checkbox>\n                  <InputNumber size=\"small\" min={this.state.tankDiameter * -0.5} max={this.state.tankDiameter * 0.5} defaultValue={this.state.transPanYZ} onChange={(value) => this.handleChange('transPanYZ', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem17\">\n                  <span className=\"trans-pan\">XZ Side Enable</span>\n                  <Checkbox className=\"transCheck\" onChange={(value) => this.handleTransEnable('transEnableXZ', value)}></Checkbox>\n                  <InputNumber size=\"small\" min={this.state.tankHeight * -0.5} max={this.state.tankHeight * 0.5} defaultValue={this.state.transPanXZ} onChange={(value) => this.handleChange('transPanXZ', value)} />\n                </Menu.Item>\n                <Menu.SubMenu key=\"menuitem18\" title=\"test subMenu\">\n                  <Menu.Item key=\"menuitem19\">xx</Menu.Item>\n                  <Menu.Item key=\"menuitem20\">yy</Menu.Item>\n                </Menu.SubMenu>\n              </Menu.SubMenu>\n            </Menu>\n          </Sider>\n        </Layout>\n      </div>\n    );\n  }\n}\n//  onClick={ev => {this.handleSetting(\"load\")}}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}