{"version":3,"sources":["Turbine.js","App.js","serviceWorker.js","index.js"],"names":["THREE","require","OrbitControls","_","metalColor","greyColor","Turbine","colors","normal","tank","shaft","disk","hub","blade","baffle","hover","props","setting","this","resetViewer","_this2","glRenderer","WebGLRenderer","canvas","refs","painter","alpha","antialias","shadowMap","enabled","clippingPlanes","Object","freeze","localClippingEnabled","animate","onAnimate","hoverArr","scene","Scene","camera","PerspectiveCamera","position","set","tankDiameter","tankHeight","add","light","PointLight","createShadowLight","controls","noZoom","rotateSpeed","zoomSpeed","panSpeed","keys","addEventListener","copy","startAutoRotation","offsetX","offsetLeft","offsetY","offsetTop","raycaster","Raycaster","normalVector","Vector2","window","event","x","clientX","width","y","clientY","height","setFromCamera","intersects","intersectObjects","children","colorFormat","length","forEach","item","indexOf","object","name","material","color","setHex","onHoverObject","transEnableXY","transEnableYZ","transEnableXZ","createAxis","createTank","createShaft","blades","hubs","disks","impellerCount","i","createHub","createDisk","changeBladeCount","bladeCount","baffles","changeBaffleCount","baffleCount","createPlane","createTransPan","kernelAngle","stopAutoRotation","dispose","nextProps","setSize","aspect","updateProjectionMatrix","remove","axisGroup","kernelAutoRotation","changeImpellerCount","bladeInnerRadius","bladeOuterRadius","bladeWidth","bladeHeight","changeBladeGeometry","hubRadius","hubHeight","updateHub","diskRadius","diskHeight","updateDisk","transPanXY","changeTransPan","transPanYZ","transPanXZ","transRotateAngle","changeTransEnable","transEnableRotate","isEqual","updatePlane","updateTank","updateShaft","updateTransPan","updateBaffles","mesh","originalColor","_this3","timerId","setInterval","kernelRotationDir","updateBlades","clearInterval","update","render","dirArr","dirLight","DirectionalLight","castShadow","shadow","near","far","right","left","top","bottom","mapSize","str","dir","font","self","dir3D","Vector3","originalPos","arrow","ArrowHelper","axisSize","geoOption","size","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","labelGeo","TextGeometry","labelMat","MeshStandardMaterial","labelMesh","Mesh","Group","Math","max","FontLoader","load","createAxisLine","grid","GridHelper","_ref","CylinderGeometry","geometry","createTankGeometry","MeshLambertMaterial","opacity","transparent","side","BackSide","shaftRadius","_ref2","createShaftGeometry","MeshPhongMaterial","DoubleSide","clipShadows","num","count","radius","createDiskGeometry","diskMesh","setImpellerPositionY","push","diskGeo","createHubGeometry","hubMesh","hubGeo","d","h","transPanMeshXY","createTranslucentPan","transPanMeshYZ","transPanMeshXZ","transPanMeshCenter","updateTranslucentPan","sizeArr","panGeo","BoxGeometry","panMat","panMesh","visible","scale","parameters","depth","newValue","oldValue","pop","innerRadius","outerRadius","offset","distance","yAxis","j","angle","PI","applyAxisAngle","rotation","angle1","baffleInnerRadius","_ref3","baffleOuterRadius","baffleWidth","posY","createBaffleGeometry","type","value","z","needle","haystack","uuid","target","react_default","a","createElement","ref","Component","Content","Layout","Header","Sider","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFileSelect","e","preventDefault","fileInput","click","state","canvasWidth","canvasHeight","unit","transEnableImpeller","hoverObject","fileReader","FileReader","onload","jsonData","JSON","parse","result","impeller","key","numBlades","bladeThickness","importJsonData","gridx","numBaffles","thickness","numImpellers","setState","defineProperty","innerWidth","innerHeight","handleResize","removeEventListener","field","updatedInfo","map","idx","setTimeout","checked","_this4","file","readAsText","exportJsonData","resolution","starting_step","impeller_start_angle","impeller_startup_steps_until_normal_speed","firstBaffleOffset","firstBladeOffset","uav","blade_tip_angular_vel_w0","impeller_position","jQuery","download","href","encodeURIComponent","stringify","appendTo","_this5","className","layout","style","overflowY","src_Turbine","handleHoverObject","menu","theme","mode","defaultOpenKeys","SubMenu","title","icon","fontWeight","onClick","ev","handleSetting","id","onChange","handleFile","files","exportJsonFile","bind","Item","input_number","min","defaultValue","handleChange","toConsumableArray","Array","val","concat","handleImpellerChange","es_checkbox","handleAutoRotation","es_radio","handleRadio","handleTransEnable","Boolean","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e41ff34a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst THREE = require('three');\n// var TrackballControls = require('three-trackballcontrols');\nvar OrbitControls = require(\"three-orbit-controls\")(THREE);\nvar _ = require('lodash');\nvar metalColor = 0xFFFFFF;\nvar greyColor = 0xEEEEEE;\n\nclass Turbine extends Component {\n  colors = {\n    normal: {\n      tank: greyColor,\n      shaft: metalColor,\n      disk: metalColor,\n      hub: metalColor,\n      blade: metalColor,\n      baffle: metalColor\n    },\n    hover: {\n      tank: 0x0000ff,\n      shaft: 0x00ff00,\n      disk: 0x00ff00,\n      hub: 0x00ff00,\n      blade: 0x00ff00,\n      baffle: 0x00ff00\n    }\n  }\n\n  componentDidUpdate(props) {\n    switch (props.setting) {\n      case \"reset\":\n        this.resetViewer();\n        break;\n      default:\n        break;\n    };\n  }\n\n  componentDidMount() {\n    this.glRenderer = new THREE.WebGLRenderer({\n      canvas: this.refs.painter,\n      alpha: true,\n      antialias: true\n    });\n    this.glRenderer.shadowMap.enabled = true;\n\n    this.glRenderer.clippingPlanes = Object.freeze( [] ); // GUI sets it to globalPlanes\n    this.glRenderer.localClippingEnabled = true;\n    this.glRenderer.animate(() => this.onAnimate());\n\n    this.hoverArr = [ \"disk\", \"hub\", \"shaft\", \"blade\", \"baffle\"];//\"tank\",\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(45, 1, 0.1, 10000);\n    this.camera.position.set(this.props.tankDiameter /2,\n                            this.props.tankHeight,\n                            this.props.tankDiameter * 3);\n    this.scene.add(this.camera);\n\n    this.light = new THREE.PointLight(0xffffff, 0.3);\n    this.light.position.set(0, 0, this.props.tankDiameter * 3);\n    this.scene.add(this.light);\n\n    this.createShadowLight([0, 0, 1]);\n    this.createShadowLight([0, 1, 0]);\n    this.createShadowLight([1, 0, 0]);\n\n    // this.controls = new TrackballControls(this.camera, this.refs.painter);\n    this.controls = new OrbitControls(this.camera);\n\n    this.controls.noZoom = true;\n    //this.controls.noRotate = true;\n    //this.controls.noKeys  = true;\n    //this.controls.noPan  = true;\n    this.controls.rotateSpeed = 1.0;\n    this.controls.zoomSpeed = 1.2;\n    this.controls.panSpeed = 0.8;\n\n    this.controls.keys = [ 65, 83, 68 ];\n\n    this.controls.addEventListener('change', () => {\n      this.light.position.copy(this.camera.position);\n    });\n    this.startAutoRotation();\n\n    this.offsetX = this.refs.painter.offsetLeft;\n    this.offsetY = this.refs.painter.offsetTop;\n\n    this.raycaster = new THREE.Raycaster();\n    this.normalVector = new THREE.Vector2();\n    window.addEventListener('mousemove', event => {\n      // calculate mouse position in normalized device coordinates\n      // (-1 to +1) for both components\n      this.normalVector.x = ((event.clientX - this.offsetX) / this.props.width) * 2 - 1;\n      this.normalVector.y = -((event.clientY - this.offsetY) / this.props.height) * 2 + 1;\n  \n      // update the picking ray with the camera and mouse position\n      this.raycaster.setFromCamera(this.normalVector, this.camera);\n\n      // calculate objects intersecting the picking ray\n      var intersects = this.raycaster.intersectObjects(this.scene.children, true);\n      this.colorFormat();\n      if (intersects && intersects.length) {\n        intersects.forEach(item => {\n          if (this.hoverArr.indexOf(item.object.name) !== -1) {\n            item.object.material.color.setHex(0x00FF00);\n            this.props.onHoverObject(item.object.name);\n          }\n        });\n      }\n    });\n\n    this.transEnableXY = false;\n    this.transEnableYZ = false;\n    this.transEnableXZ = false;\n    //this.transEnableImpeller = false;\n\n    this.createAxis(this.props.tankDiameter, this.props.tankHeight);\n\n    this.createTank();\n    this.createShaft();\n\n    this.blades = [];\n    this.hubs = [];\n    this.disks = [];\n    //this.diskTrans = [];\n    var impellerCount = this.props.impellerCount;\n    for (let i = 0; i < impellerCount; i++) {\n      this.blades[i] = [];\n      this.createHub(i, impellerCount);\n      this.createDisk(i, impellerCount);\n      this.changeBladeCount(this.props.bladeCount[i], 0, i);\n    }\n\n    this.baffles = [];\n    this.changeBaffleCount(this.props.baffleCount, 0);\n\n    this.createPlane();\n    this.createTransPan(this.props.tankDiameter, this.props.tankHeight);\n\n    this.kernelAngle = 0;\n  }\n\n  componentWillUnmount() {\n    this.stopAutoRotation();\n    this.controls.dispose();\n    delete this.controls;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {\n      this.glRenderer.setSize(nextProps.width, nextProps.height);\n      this.camera.aspect = nextProps.width / nextProps.height;\n      this.camera.updateProjectionMatrix();\n    }\n\n    if (nextProps.tankDiameter !== this.props.tankDiameter || nextProps.tankHeight !== this.props.tankHeight) {\n      this.scene.remove(this.axisGroup);\n      this.createAxis(nextProps.tankDiameter, nextProps.tankHeight);\n    }\n\n    if (nextProps.kernelAutoRotation && !this.props.kernelAutoRotation) {\n      this.startAutoRotation();\n    } else if (!nextProps.kernelAutoRotation && this.props.kernelAutoRotation) {\n      this.stopAutoRotation();\n    }\n\n    if (nextProps.impellerCount !== this.props.impellerCount) {\n      this.changeImpellerCount(nextProps.impellerCount, this.props.impellerCount);\n    }\n    else {\n      for (let i = 0; i < this.props.impellerCount; i++) {\n        if (nextProps.bladeCount[i] !== this.props.bladeCount[i]) {\n          this.changeBladeCount(nextProps.bladeCount[i], this.props.bladeCount[i], i);\n        }\n        if (nextProps.bladeInnerRadius[i] !== this.props.bladeInnerRadius[i] ||\n          nextProps.bladeOuterRadius[i] !== this.props.bladeOuterRadius[i] ||\n          nextProps.bladeWidth[i] !== this.props.bladeWidth[i] ||\n          nextProps.bladeHeight[i] !== this.props.bladeHeight[i]) {\n          this.changeBladeGeometry(nextProps.bladeInnerRadius[i], nextProps.bladeOuterRadius[i], nextProps.bladeWidth[i], nextProps.bladeHeight[i], i);\n        }\n        if (nextProps.hubRadius[i] !== this.props.hubRadius[i] ||\n            nextProps.hubHeight[i] !== this.props.hubHeight[i]) {\n          this.updateHub(nextProps.hubRadius[i], nextProps.hubHeight[i], i);\n        }\n        if (nextProps.diskRadius[i] !== this.props.diskRadius[i] ||\n            nextProps.diskHeight[i] !== this.props.diskHeight[i]) {\n          this.updateDisk(nextProps.diskRadius[i], nextProps.diskHeight[i], i);\n        }\n      }\n    }\n\n    if (nextProps.baffleCount !== this.props.baffleCount) {\n      this.changeBaffleCount(nextProps.baffleCount, this.props.baffleCount);\n    }\n\n    if (nextProps.transPanXY !== this.props.transPanXY)\n      this.changeTransPan(\"XY\", nextProps.transPanXY);\n    else if (nextProps.transPanYZ !== this.props.transPanYZ)\n      this.changeTransPan(\"YZ\", nextProps.transPanYZ);\n    else if (nextProps.transPanXZ !== this.props.transPanXZ)\n      this.changeTransPan(\"XZ\", nextProps.transPanXZ);\n    else if (nextProps.transRotateAngle !== this.props.transRotateAngle)\n      this.changeTransPan(\"Angle\", nextProps.transRotateAngle);\n\n    if (nextProps.transEnableXY !== this.props.transEnableXY)\n      this.changeTransEnable(\"XY\", nextProps.transEnableXY);\n    else if (nextProps.transEnableYZ !== this.props.transEnableYZ)\n      this.changeTransEnable(\"YZ\", nextProps.transEnableYZ);\n    else if (nextProps.transEnableXZ !== this.props.transEnableXZ)\n      this.changeTransEnable(\"XZ\", nextProps.transEnableXZ);\n    // else if (nextProps.transEnableImpeller !== this.props.transEnableImpeller)\n    //   this.changeTransEnable(\"Impeller\", nextProps.transEnableImpeller);\n    else if (nextProps.transEnableRotate !== this.props.transEnableRotate)\n      this.changeTransEnable(\"Rotate\", nextProps.transEnableRotate);\n\n    if (!_.isEqual(nextProps, this.props)) {\n      \n      this.updatePlane(nextProps);\n      this.updateTank(nextProps);\n      this.updateShaft(nextProps);\n\n      this.updateTransPan(this.props.tankDiameter, this.props.tankHeight);\n\n      // this.updateDisk(nextProps.diskRadius, nextProps.diskHeight);\n      // this.updateHub(nextProps.hubRadius, nextProps.hubHeight);\n      // this.updateBlades(this.props.bladeInnerRadius, this.props.bladeOuterRadius);\n\n      this.updateBaffles(nextProps);\n    }\n  }\n\n  colorFormat() {\n    this.scene.children.forEach(mesh => {\n      if (mesh && mesh.material && mesh.originalColor) {\n        mesh.material.color.setHex(mesh.originalColor);\n      }\n    });\n  }\n\n  startAutoRotation() {\n    this.timerId = window.setInterval(() => {\n      switch (this.props.kernelRotationDir) {\n        case 'clockwise':\n          this.kernelAngle = (this.kernelAngle + 4) % 360;\n          for (let i = 0; i < this.props.impellerCount; i++) {\n            this.updateBlades(this.props.bladeInnerRadius[i], this.props.bladeOuterRadius[i], i);\n          }\n          \n          break;\n        case 'counter-clockwise':\n          this.kernelAngle = (this.kernelAngle - 4) % 360;\n          for (let i = 0; i < this.props.impellerCount; i++) {\n            this.updateBlades(this.props.bladeInnerRadius[i], this.props.bladeOuterRadius[i], i);\n          }\n          break;\n        default:\n          break;\n      }\n    }, 60);\n  }\n\n  stopAutoRotation() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  onAnimate() {\n    // we will get this callback every frame\n\n    // pretend cubeRotation is immutable.\n    // this helps with updates and pure rendering.\n    // React will be sure that the rotation has now updated.\n    // this.setState({\n    //   cubeRotation: new THREE.Euler(\n    //     this.props.cubeRotation.x + 0.1,\n    //     this.props.cubeRotation.y + 0.1,\n    //     0\n    //   )\n    // });\n    this.controls.update();\n    this.glRenderer.render(this.scene, this.camera);\n  }\n\n  createShadowLight(dirArr) {\n    var dis = 3000;\n    var dirLight = new THREE.DirectionalLight( 0x55505a, 1 );\n    dirLight.position.set( dis* dirArr[0], dis* dirArr[1], dis* dirArr[2] );\n    dirLight.castShadow = true;\n    dirLight.shadow.camera.near = 1;\n    dirLight.shadow.camera.far = 9000;\n\n    dirLight.shadow.camera.right = 1;\n    dirLight.shadow.camera.left = - 1;\n    dirLight.shadow.camera.top\t= 1;\n    dirLight.shadow.camera.bottom = - 1;\n\n    dirLight.shadow.mapSize.width = 1024;\n    dirLight.shadow.mapSize.height = 1024;\n    this.scene.add( dirLight );\n  }\n\n  createAxisLine(str, dir, color, font, self) {\n    var dir3D = new THREE.Vector3(dir[0], dir[1], dir[2]);\n    var originalPos = new THREE.Vector3(0, 0, 0);\n    var arrow = new THREE.ArrowHelper(dir3D, originalPos, self.axisSize, color, 20, 10);\n    arrow.name = str;\n    self.axisGroup.add(arrow);\n\n    var geoOption = {\n      font: font,\n      size: 15,\n      height: 2,\n      curveSegments: 12,\n      bevelEnabled: true,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 5\n    };\n    var labelGeo = new THREE.TextGeometry(str, geoOption);\n    var labelMat = new THREE.MeshStandardMaterial({color:color});\n    var labelMesh = new THREE.Mesh(labelGeo, labelMat);\n    labelMesh.position.set(dir[0] * (self.axisSize + 10),\n                           dir[1] * (self.axisSize + 10),\n                           dir[2] * (self.axisSize + 10) );\n    self.axisGroup.add(labelMesh);\n  }\n\n  createAxis(tankDiameter, tankHeight) {\n    this.axisGroup = new THREE.Group();\n    this.scene.add(this.axisGroup);\n\n    this.axisSize = Math.max(tankDiameter, tankHeight);\n\n    var self = this;\n    var fontLoader = new THREE.FontLoader();\n    fontLoader.load('fonts/helvetiker_regular.typeface.json', font => {\n      self.createAxisLine(\"X\", [1, 0, 0], 0xFF0000, font, self);\n      self.createAxisLine(\"Y\", [0, -1, 0], 0x00FF00, font, self);\n      self.createAxisLine(\"Z\", [0, 0, -1], 0x0000FF, font, self);\n    });\n\n    this.axisGroup.position.set(tankDiameter/-2, tankHeight/2, tankDiameter/2);\n\n  }\n\n  createPlane() {\n    this.grid = new THREE.GridHelper(1000, 50);\n    this.grid.position.y = -(this.props.tankHeight / 2);\n    this.scene.add(this.grid);\n  }\n\n  updatePlane(props) {\n    this.grid.position.y = -(props.tankHeight / 2);\n  }\n\n  createTankGeometry({ tankDiameter, tankHeight }) {\n    return new THREE.CylinderGeometry(tankDiameter / 2, tankDiameter / 2, tankHeight, 30);\n  }\n\n  createTank() {\n    var geometry = this.createTankGeometry(this.props);\n    var material = new THREE.MeshLambertMaterial({\n      color: greyColor,\n      opacity: 0.3,\n      transparent: true,\n      side: THREE.BackSide\n      // clippingPlanes: [],\n      // clipShadows: true\n    });\n    this.tank = new THREE.Mesh(geometry, material);\n    this.tank.name = \"tank\";\n    this.tank.originalColor = greyColor;\n    this.scene.add(this.tank);\n  }\n\n  updateTank(props) {\n    delete this.tank.geometry;\n    this.tank.geometry = this.createTankGeometry(props);\n  }\n\n  createShaftGeometry({ shaftRadius, tankHeight }) {\n    return new THREE.CylinderGeometry(shaftRadius, shaftRadius, tankHeight, 30);\n  }\n\n  createShaft() {\n    var geometry = this.createShaftGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: metalColor,\n      side: THREE.DoubleSide,\n      clippingPlanes: [],\n      clipShadows: true\n    });\n    this.shaft = new THREE.Mesh(geometry, material);\n    this.shaft.name = \"shaft\";\n    this.shaft.originalColor = metalColor;\n    this.scene.add(this.shaft);\n  }\n\n  updateShaft(props) {\n    delete this.shaft.geometry;\n    this.shaft.geometry = this.createShaftGeometry(props);\n  }\n\n  createDiskGeometry(diskRadius, diskHeight ) {\n    return new THREE.CylinderGeometry(diskRadius, diskRadius, diskHeight, 30);\n  }\n\n  createDisk(num, count) {\n    if (!this.props.diskRadius[num] || this.props.diskHeight[num]) {\n      this.props.diskRadius[num] = this.props.diskRadius[0];\n      this.props.diskHeight[num] = this.props.diskHeight[0];\n    }\n    var radius = this.props.diskRadius[num], height = this.props.diskHeight[num];\n    var geometry = this.createDiskGeometry(radius, height);\n    var material = new THREE.MeshPhongMaterial({\n      color: metalColor,\n      side: THREE.DoubleSide,\n      // clippingPlanes: [],\n      // clipShadows: true\n    });\n    var diskMesh = new THREE.Mesh(geometry, material);\n    diskMesh.position.y = this.setImpellerPositionY(num, count);\n    diskMesh.name = \"disk\" + num;\n    diskMesh.originalColor = metalColor;\n\n    // var panGeo = new THREE.BoxGeometry(2 * radius + 50, 2, 2 * radius + 50);\n    // var panMat = new THREE.MeshPhongMaterial({\n    //   color : 0x0000FF,\n    //   side: THREE.DoubleSide,\n    //   transparent : true,\n    //   opacity : 0.8\n    // });\n    // var panMesh = new THREE.Mesh(panGeo, panMat);\n    // panMesh.position.y = this.setImpellerPositionY(num, count);\n    // panMesh.name = \"diskPan\" + num;\n    // panMesh.visible = this.transEnableImpeller;\n\n    this.disks.push(diskMesh);\n    this.scene.add(diskMesh);\n    //this.diskTrans.push(panMesh);\n    //this.scene.add(panMesh);\n  }\n\n  updateDisk(radius, height, num) {\n    var diskGeo = this.createDiskGeometry(radius, height);\n    delete this.disks[num].geometry;\n    this.disks[num].geometry = diskGeo;\n\n    // var panGeo = new THREE.BoxGeometry(2 * radius + 50, 2, 2 * radius + 50);\n    // delete this.diskTrans[num].geometry;\n    // this.diskTrans[num].geometry = panGeo;\n  }\n\n  createHubGeometry(hubRadius, hubHeight) {\n    return new THREE.CylinderGeometry(hubRadius, hubRadius, hubHeight, 30);\n  }\n\n  createHub(num, count) {\n    if (!this.props.hubRadius[num] || this.props.hubHeight[num]) {\n      this.props.hubRadius[num] = this.props.hubRadius[0];\n      this.props.hubHeight[num] = this.props.hubHeight[0];\n    }\n    var radius = this.props.hubRadius[num], height = this.props.hubHeight[num];\n    var geometry = this.createHubGeometry(radius, height);\n    var material = new THREE.MeshPhongMaterial({\n      color: metalColor,\n      side: THREE.DoubleSide,\n      // clippingPlanes: [],\n      // clipShadows: true\n    });\n    var hubMesh = new THREE.Mesh(geometry, material);\n    hubMesh.position.y = this.setImpellerPositionY(num, count);\n    hubMesh.name = \"hub\" + num;\n    hubMesh.originalColor = metalColor;\n    this.hubs.push(hubMesh);\n    this.scene.add(hubMesh);\n  }\n\n  updateHub(radius, height, num) {\n    var hubGeo = this.createHubGeometry(radius, height);\n    delete this.hubs[num].geometry;\n    this.hubs[num].geometry = hubGeo;\n  }\n\n  setImpellerPositionY(num, count) {\n    var tankHeight = this.props.tankHeight;\n    return tankHeight/-2 + tankHeight/(count + 1) * (num + 1);\n  }\n\n  createTransPan(d, h) {\n    var thickness = 2;\n    this.transPanMeshXY = this.createTranslucentPan([d * 1.1, h * 1.1, thickness]);\n    this.transPanMeshYZ = this.createTranslucentPan([thickness, h * 1.1, d * 1.1]);\n    this.transPanMeshXZ = this.createTranslucentPan([d * 1.1, thickness, d * 1.1]);\n    this.transPanMeshCenter = this.createTranslucentPan([d / 2, h, thickness]);\n\n    this.scene.add(this.transPanMeshXY);\n    this.scene.add(this.transPanMeshYZ);\n    this.scene.add(this.transPanMeshXZ);\n    this.transPanMeshCenter.position.x = d / 4;\n\n    this.scene.add(this.transPanMeshCenter);\n  }\n\n  updateTransPan(d, h) {\n    this.updateTranslucentPan(this.transPanMeshXY, [d * 1.1, h * 1.1, 2]);\n    this.updateTranslucentPan(this.transPanMeshYZ, [2, h * 1.1, d * 1.1]);\n    this.updateTranslucentPan(this.transPanMeshXZ, [d * 1.1, 2, d * 1.1]);\n    this.updateTranslucentPan(this.transPanMeshCenter, [d / 2, h, 2]);\n  }\n\n  createTranslucentPan(sizeArr) {\n    var panGeo = new THREE.BoxGeometry(sizeArr[0], sizeArr[1], sizeArr[2]);\n    var panMat = new THREE.MeshPhongMaterial({\n          color : 0x0000FF,\n          side: THREE.DoubleSide,\n          transparent : true,\n          opacity : 0.8\n        });\n    var panMesh = new THREE.Mesh(panGeo, panMat);\n    panMesh.name = \"transPan\";\n    panMesh.visible = false;\n    return panMesh;\n  }\n\n  updateTranslucentPan(mesh, sizeArr) {\n    mesh.scale.set(sizeArr[0] / mesh.geometry.parameters.width, sizeArr[1] / mesh.geometry.parameters.height, sizeArr[2] / mesh.geometry.parameters.depth);\n  }\n\n  changeBladeCount(newValue, oldValue, num) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.blades[num][i]);\n        this.blades[num].pop();\n        delete this.blades[num][i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var blade = new THREE.BoxGeometry(this.props.bladeWidth[num],\n                                          this.props.bladeHeight[num],\n                                          this.props.bladeOuterRadius[num] - this.props.bladeInnerRadius[num]);\n        var material = new THREE.MeshPhongMaterial({\n                color: greyColor,\n                side: THREE.DoubleSide,\n                // clippingPlanes: [],\n                // clipShadows: true\n              });\n        var mesh = new THREE.Mesh(blade, material);\n        this.blades[num].push(mesh);\n        mesh.name = \"blade\"+num;\n        mesh.originalColor = greyColor;\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  changeBladeGeometry(innerRadius, outerRadius, width, height, num) {\n    for (var i = 0; i < this.blades[num].length; i++) {\n      delete this.blades[num][i].geometry;\n      this.blades[num][i].geometry = new THREE.BoxGeometry(width, height, outerRadius - innerRadius);\n    }\n  }\n\n  updateBlades(innerRadius, outerRadius, num) {\n    var distance = (innerRadius + outerRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    var offset, count = this.props.impellerCount;\n    offset = new THREE.Vector3(0, this.setImpellerPositionY(num, count), 0);\n    for (var j = 0; j < this.blades[num].length; j++) {\n      var angle = (360 * j / this.blades[num].length + this.kernelAngle) % 360;\n      angle = 2 * Math.PI * angle / 360;\n      this.blades[num][j].position.set(0, 0, distance);\n      this.blades[num][j].position.applyAxisAngle(yAxis, angle);\n      this.blades[num][j].position.add(offset);\n      this.blades[num][j].rotation.set(0, angle, 0);\n      //this.diskTrans[num].rotation.set(0, angle, 0);\n\n      var angle1 = (360 * j / this.blades[num].length + this.kernelAngle + this.props.transRotateAngle) % 360;\n      angle1 = 2 * Math.PI * angle1 / 360;\n      this.transPanMeshCenter.position.set(this.props.tankDiameter / 4, 0, 0);\n      this.transPanMeshCenter.position.applyAxisAngle(new THREE.Vector3(0, 1, 0), angle1);\n      this.transPanMeshCenter.rotation.set(0, angle1, 0);\n    }\n  }\n\n  createBaffleGeometry({ baffleInnerRadius, baffleOuterRadius, baffleWidth, tankHeight }) {\n    return new THREE.BoxGeometry(baffleWidth, tankHeight, baffleOuterRadius - baffleInnerRadius);\n  }\n\n  changeImpellerCount(newValue, oldValue) {\n    var posY, i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= 0; i--) {\n        if (i < newValue) {\n          posY = this.setImpellerPositionY(i, newValue);\n          this.hubs[i].position.y = posY;\n          this.disks[i].position.y = posY;\n          //this.diskTrans[i].position.y = posY;\n        }\n        else {\n          this.scene.remove(this.hubs[i]);\n          this.hubs.pop();\n          this.scene.remove(this.disks[i]);\n          this.disks.pop();\n          //this.scene.remove(this.diskTrans[i]);\n          //this.diskTrans.pop();\n          for (var j = this.props.bladeCount[i] - 1; j >= 0; j--) {\n            this.scene.remove(this.blades[i][j]);\n            // this.blades[i].pop();\n            // delete this.blades[i][j];\n          }\n          this.blades.pop();\n          // delete this.hubs[i];\n          // delete this.disks[i];\n          // delete this.blades[i];\n        }\n      }\n    } else if (newValue > oldValue) {\n      for (i = 0; i < newValue; i++) {\n        posY = this.setImpellerPositionY(i, newValue);\n        if (i < oldValue) {\n          this.hubs[i].position.y = posY;\n          this.disks[i].position.y = posY;\n          //this.diskTrans[i].position.y = posY;\n          for (let j = 0; j < this.props.bladeCount; j++) {\n            this.blades[i][j].position.y = posY;\n          }\n        }\n        else {\n          this.createHub(i, newValue);\n          this.createDisk(i, newValue);\n          this.blades[i] = [];\n          this.props.bladeCount[i] = this.props.bladeCount[0];\n          this.props.bladeWidth[i] = this.props.bladeWidth[0];\n          this.props.bladeHeight[i] = this.props.bladeHeight[0];\n          this.props.bladeOuterRadius[i] = this.props.bladeOuterRadius[0];\n          this.props.bladeInnerRadius[i] = this.props.bladeInnerRadius[0];\n          this.changeBladeCount(this.props.bladeCount[i], 0, i);\n        }\n      }\n    }\n\n  }\n\n  changeBaffleCount(newValue, oldValue) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.baffles[i]);\n        this.baffles.pop();\n        delete this.baffles[i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var baffle = this.createBaffleGeometry(this.props);\n        var material = new THREE.MeshPhongMaterial({\n                    color: greyColor,\n                    side: THREE.DoubleSide,\n                    // clippingPlanes: [],\n                    // clipShadows: true\n                  });\n        var mesh = new THREE.Mesh(baffle, material);\n        this.baffles.push(mesh);\n        mesh.name = \"baffle\";\n        mesh.originalColor = greyColor;\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  changeTransPan(type, value) {\n    if (type === \"XY\") {\n      this.transPanMeshXY.position.z = value;\n    } \n    else if (type === \"YZ\") {\n      this.transPanMeshYZ.position.x = value;\n    } \n    else if (type === \"XZ\") {\n      this.transPanMeshXZ.position.y = value;\n    }\n    else if (type === \"Angle\") {\n      this.transRotateAngle = value;\n    }\n  }\n\n  changeTransEnable (type, value) {\n\n    if (type === \"XY\") \n      this.transEnableXY = value;\n    else if (type === \"YZ\")\n      this.transEnableYZ = value;\n    else if (type === \"XZ\")\n      this.transEnableXZ = value;\n    // else if (type === \"Impeller\")\n    //   this.transEnableImpeller = value;\n    else if (type === \"Rotate\")\n      this.transEnableRotate = value;\n    \n    this.transPanMeshXY.visible = this.transEnableXY;\n    this.transPanMeshYZ.visible = this.transEnableYZ;\n    this.transPanMeshXZ.visible = this.transEnableXZ;\n    this.transPanMeshCenter.visible = this.transEnableRotate;\n    // for (var i = 0; i < this.diskTrans.length; i++)\n    //   this.diskTrans[i].visible = this.transEnableImpeller;\n  }\n\n  updateBaffles(props) {\n    const { baffleInnerRadius, baffleOuterRadius } = props;\n    var distance = (baffleInnerRadius + baffleOuterRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    for (var i = 0; i < this.baffles.length; i++) {\n      delete this.baffles[i].geometry;\n      this.baffles[i].geometry = this.createBaffleGeometry(props);\n      var angle = 2 * Math.PI * i / this.baffles.length;\n      this.baffles[i].position.set(0, 0, distance);\n      this.baffles[i].position.applyAxisAngle(yAxis, angle);\n      this.baffles[i].rotation.set(0, angle, 0);\n    }\n  }\n\n  checkFirstObject(needle, haystack) {\n    if (haystack.length > 0) {\n      return needle.uuid === haystack[0].object.uuid;\n    } else {\n      return false;\n    }\n  }\n\n  resetViewer() {\n    this.camera.position.set(this.props.tankDiameter /2, this.props.tankHeight, this.props.tankDiameter * 3);\n    this.controls.target.set(0, 0, 0);\n  }\n\n  render() {\n    return (\n      <canvas ref=\"painter\" width={this.props.width} height={this.props.height}></canvas>\n    );\n  }\n}\n\nTurbine.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  tankDiameter: PropTypes.number.isRequired,\n  tankHeight: PropTypes.number.isRequired,\n  shaftRadius: PropTypes.number.isRequired,\n  kernelAutoRotation: PropTypes.bool,\n  kernelRotationDir: PropTypes.string,\n  baffleCount: PropTypes.number.isRequired,\n  baffleInnerRadius: PropTypes.number.isRequired,\n  baffleOuterRadius: PropTypes.number.isRequired,\n\n  impellerCount : PropTypes.number.isRequired,\n  hubRadius: PropTypes.array.isRequired,\n  hubHeight: PropTypes.array.isRequired,\n  diskRadius: PropTypes.array.isRequired,\n  diskHeight: PropTypes.array.isRequired,\n  bladeCount: PropTypes.array.isRequired,\n  bladeInnerRadius: PropTypes.array.isRequired,\n  bladeOuterRadius: PropTypes.array.isRequired,\n  bladeWidth: PropTypes.array.isRequired,\n  bladeHeight: PropTypes.array.isRequired,\n\n  transPanXY: PropTypes.number.isRequired,\n  transPanYZ: PropTypes.number.isRequired,\n  transPanXZ: PropTypes.number.isRequired,\n  transRotateAngle: PropTypes.number.isRequired,\n  transEnableXY: PropTypes.bool,\n  transEnableYZ: PropTypes.bool,\n  transEnableXZ: PropTypes.bool,\n  //transEnableImpeller: PropTypes.bool,\n  transEnableRotate: PropTypes.bool,\n  baffleWidth: PropTypes.number.isRequired,\n  onHoverObject: PropTypes.func\n};\n\nexport default Turbine;\n","import React, { Component } from 'react';\nimport { Checkbox, Icon, InputNumber, Layout, Menu, Radio } from 'antd';\nimport Turbine from './Turbine';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport jQuery from 'jquery';\n\nconst { Content, Header, Sider } = Layout;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const unit = 300;\n    this.state = {\n      canvasWidth: 50,\n      canvasHeight: 50,\n      tankDiameter: unit,\n      tankHeight: unit,\n      shaftRadius: unit * 2 / 75,\n      kernelAutoRotation: true,\n      kernelRotationDir: 'clockwise',\n      baffleCount: 4,\n      baffleInnerRadius: unit * 2 / 5,\n      baffleOuterRadius: unit / 2,\n      baffleWidth: unit / 75,\n\n      impellerCount: 3,\n      hubRadius: [unit * 4 / 75, unit * 4 / 75, unit * 4 / 75],\n      hubHeight: [unit / 15, unit / 15, unit / 15],\n      diskRadius: [unit / 8, unit / 8, unit / 8],\n      diskHeight: [unit / 75, unit / 75, unit / 75],\n      bladeCount: [6, 6, 6],\n      bladeInnerRadius: [unit / 12, unit / 12, unit / 12],\n      bladeOuterRadius: [unit / 6, unit / 6, unit / 6],\n      bladeWidth: [unit / 75, unit / 75, unit / 75],\n      bladeHeight: [unit / 15, unit / 15, unit / 15],\n\n      transPanXY: 0,\n      transPanYZ: 0,\n      transPanXZ: 0,\n      transRotateAngle: 0,\n      transEnableXY: false,\n      transEnableYZ: false,\n      transEnableXZ: false,\n      transEnableImpeller: false,\n      transEnableRotate: false,\n      hoverObject: '',\n      setting:''\n    };\n    this.fileReader = new FileReader();\n    this.fileReader.onload = (event) => {\n      // or do whatever manipulation you want on JSON.parse(event.target.result) here.\n\n      var jsonData = JSON.parse(event.target.result);\n\n      var hubRadius = [];\n      var hubHeight = [];\n      var diskRadius = [];\n      var diskHeight = [];\n      var bladeCount = [];\n      var bladeInnerRadius = [];\n      var bladeOuterRadius = [];\n      var bladeWidth = [];\n      var bladeHeight = [];\n\n      var keyArr = Object.keys(jsonData.impeller);\n  \n      keyArr.forEach(key => {\n        hubRadius[key] = jsonData.impeller[key].hub.radius;\n        hubHeight[key] = jsonData.impeller[key].hub.top\n        diskRadius[key] = jsonData.impeller[key].disk.radius;\n        diskHeight[key] = jsonData.impeller[key].disk.top;\n        bladeCount[key] = jsonData.impeller[key].numBlades;\n        bladeInnerRadius[key] = jsonData.impeller[key].blades.innerRadius;\n        bladeOuterRadius[key] = jsonData.impeller[key].blades.outerRadius;\n        bladeWidth[key] = jsonData.impeller[key].blades.bladeThickness;\n        bladeHeight[key] = jsonData.impeller[key].blades.top;\n      });\n \n      var importJsonData = {\n        tankDiameter: jsonData.tankDiameter,\n        tankHeight: jsonData.gridx,\n        shaftRadius: jsonData.shaft.radius,\n        baffleCount: jsonData.baffles.numBaffles,\n        baffleInnerRadius: jsonData.baffles.innerRadius,\n        baffleOuterRadius: jsonData.baffles.outerRadius,\n        baffleWidth: jsonData.baffles.thickness,\n\n        impellerCount : jsonData.numImpellers,\n        hubRadius: hubRadius,\n        hubHeight: hubHeight,\n        diskRadius: diskRadius,\n        diskHeight: diskHeight,\n        bladeCount: bladeCount,\n        bladeInnerRadius: bladeInnerRadius,\n        bladeOuterRadius: bladeOuterRadius,\n        bladeWidth: bladeWidth,\n        bladeHeight: bladeHeight,\n      };\n      Object.keys(importJsonData).forEach(key => {\n        this.setState({ [key]: importJsonData[key] });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      canvasWidth: window.innerWidth - 320,\n      canvasHeight: window.innerHeight - 64\n    });\n    this.handleResize = () => {\n      this.setState({\n        canvasWidth: window.innerWidth - 320,\n        canvasHeight: window.innerHeight - 64\n      });\n    }\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleChange(field, value) {\n    this.setState({ [field]: value });\n  }\n  handleImpellerChange(field, value, num) {\n    const updatedInfo = this.state[field].map((item, idx) => {\n      if(idx === num) {\n        item = value;\n      }\n      return item;\n    })\n    this.setState({[field]: updatedInfo});\n  }\n  handleTransEnable(field, value) {\n    setTimeout(() => {\n      this.setState({ [field]: value.target.checked });\n    }, 100);\n    \n  }\n\n  handleAutoRotation(event) {\n    this.setState({ kernelAutoRotation: event.target.checked });\n  }\n\n  handleRadio(event) {\n    this.setState({ kernelRotationDir: event.target.value });\n  }\n\n  handleHoverObject(name) {\n    this.setState({ hoverObject: name });\n  }\n\n  handleSetting(type) {\n    this.setState({setting:type});\n    setTimeout(() => {\n      this.setState({setting:''});\n    }, 100);\n  }\n\n  handleFileSelect = (e) => {\n    e.preventDefault();\n    this.refs.fileInput.click();\n  }\n\n  handleFile(file) {\n    this.fileReader.readAsText(file);\n  }\n\n  exportJsonFile() {\n    // kernelAutoRotation={this.state.kernelAutoRotation}\n    // kernelRotationDir={this.state.kernelRotationDir}\n    var exportJsonData = {\n      name: \"GeometryConfig\",\n      gridx: this.state.tankHeight,\n      resolution: \"0.699999988\",\n      tankDiameter: this.state.tankDiameter,\n      starting_step: 0,\n      impeller_start_angle: 0,\n      impeller_startup_steps_until_normal_speed: 0,\n      baffles: {\n          numBaffles: this.state.baffleCount,\n          firstBaffleOffset: \"0.785398185\",\n          innerRadius: this.state.baffleInnerRadius,\n          outerRadius: this.state.baffleOuterRadius,\n          thickness: this.state.baffleWidth\n      },\n      numImpellers: this.state.impellerCount,\n      shaft: {\n          radius: this.state.shaftRadius\n      }\n    };\n\n    var impeller = {};\n    for (let i = 0; i < this.state.impellerCount; i++) {\n      var keyStr = i;\n\n      impeller[keyStr] = {\n        numBlades: this.state.bladeCount[i],\n        firstBladeOffset: 0,\n        uav: \"0.100000001\",\n        blade_tip_angular_vel_w0: \"0.00588235306\",\n        impeller_position: this.state.tankDiameter/(this.state.impellerCount + 1) * (i + 1),\n        blades: {\n            innerRadius: this.state.bladeInnerRadius[i],\n            outerRadius: this.state.bladeOuterRadius[i],\n            bottom: \"71.4000015\",\n            top: this.state.bladeHeight[i],\n            bladeThickness: this.state.bladeWidth[i]\n        },\n        disk: {\n            radius: this.state.diskRadius[i],\n            bottom: \"68.6800003\",\n            top: this.state.diskHeight[i]\n        },\n        hub: {\n            radius: this.state.hubRadius[i],\n            bottom: \"71.4000015\",\n            top: this.state.hubHeight[i]\n        }\n      }\n    }\n\n    exportJsonData[\"impeller\"] = impeller;\n\n    jQuery(\"<a />\", {\n      \"download\": \"data.json\",\n      \"href\" : \"data:application/json,\" + encodeURIComponent(JSON.stringify(exportJsonData))\n    }).appendTo(\"body\")\n    .click(function() {\n      jQuery(this).remove()\n    })[0].click();\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Layout style={{ height: '100%' }}>\n          <Layout>\n            <Header>\n              <h1>Turbulent Dynamics</h1>\n            </Header>\n            <Content style={{ overflowY: 'hidden' }}>\n              <Turbine\n                width={this.state.canvasWidth}\n                height={this.state.canvasHeight}\n                tankDiameter={this.state.tankDiameter}\n                tankHeight={this.state.tankHeight}\n                shaftRadius={this.state.shaftRadius}\n                kernelAutoRotation={this.state.kernelAutoRotation}\n                kernelRotationDir={this.state.kernelRotationDir}\n                baffleCount={this.state.baffleCount}\n                baffleInnerRadius={this.state.baffleInnerRadius}\n                baffleOuterRadius={this.state.baffleOuterRadius}\n                baffleWidth={this.state.baffleWidth}\n\n                impellerCount={this.state.impellerCount}\n                hubRadius={this.state.hubRadius}\n                hubHeight={this.state.hubHeight}\n                diskRadius={this.state.diskRadius}\n                diskHeight={this.state.diskHeight}\n                bladeCount={this.state.bladeCount}\n                bladeInnerRadius={this.state.bladeInnerRadius}\n                bladeOuterRadius={this.state.bladeOuterRadius}\n                bladeWidth={this.state.bladeWidth}\n                bladeHeight={this.state.bladeHeight}\n\n                transPanXY={this.state.transPanXY}\n                transPanYZ={this.state.transPanYZ}\n                transPanXZ={this.state.transPanXZ}\n                transRotateAngle={this.state.transRotateAngle}\n                transEnableXY={this.state.transEnableXY}\n                transEnableYZ={this.state.transEnableYZ}\n                transEnableXZ={this.state.transEnableXZ}\n                transEnableImpeller={this.state.transEnableImpeller}\n                transEnableRotate={this.state.transEnableRotate}\n                onHoverObject={name => this.handleHoverObject(name)}\n                setting={this.state.setting}\n              />\n            </Content>\n          </Layout>\n          <Sider width={320} style={{ overflowY: 'auto' }}>\n            <div className=\"logo\"></div>\n            <Menu theme=\"dark\" mode=\"inline\" defaultOpenKeys={['setting']}>\n              <Menu.SubMenu className=\"setting subMenu\" key=\"setting\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'setting' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'setting' ? 'bold' : 'normal'\n                  }}>Setting</span>\n                </span>\n              }>\n                <div className=\"setting-item\">\n                  <button onClick={ev => {this.handleSetting(\"reset\")}}>Reset Camera</button>\n                </div>\n                <div><input id=\"fileInput\" ref=\"fileInput\" type=\"file\" onChange={ (e) => this.handleFile(e.target.files[0]) } /></div>\n                <div className=\"setting-item\">\n                  <button onClick={this.handleFileSelect}>Load Json</button>\n                </div>\n                <div className=\"setting-item\">\n                  <button onClick={this.exportJsonFile.bind(this)}>Save Json</button>\n                </div>\n              </Menu.SubMenu>\n              <Menu.SubMenu className=\"subMenu\" key=\"tank\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'tank' ? 'environment' : 'mail'} />\n                  <span style={{fontWeight: this.state.hoverObject === 'tank' ? 'bold' : 'normal'}}>Tank</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem1\">\n                  <span>Diameter</span>\n                  <InputNumber size=\"small\" min={100} defaultValue={this.state.tankDiameter} onChange={(value) => this.handleChange('tankDiameter', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem2\">\n                  <span>Height</span>\n                  <InputNumber size=\"small\" min={100} defaultValue={this.state.tankHeight} onChange={(value) => this.handleChange('tankHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu className=\"subMenu\" key=\"shaft\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'shaft' ? 'environment' : 'mail'} />\n                  <span style={{fontWeight: this.state.hoverObject === 'shaft' ? 'bold' : 'normal'}}>Shaft</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem3\">\n                  <span>Radius</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.shaftRadius} onChange={(value) => this.handleChange('shaftRadius', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu className=\"subMenu\" key=\"baffle\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'baffle' ? 'environment' : 'mail'} />\n                  <span style={{fontWeight: this.state.hoverObject === 'baffle' ? 'bold' : 'normal'}}>Baffle</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem15\">\n                  <span>Count</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.baffleCount} onChange={(value) => this.handleChange('baffleCount', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem16\">\n                  <span>Inner Radius</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.baffleInnerRadius} onChange={(value) => this.handleChange('baffleInnerRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem17\">\n                  <span>Outer Radius</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.baffleOuterRadius} onChange={(value) => this.handleChange('baffleOuterRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem18\">\n                  <span>Width</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.baffleWidth} onChange={(value) => this.handleChange('baffleWidth', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu className=\"subMenu\" key=\"impellers\" title={\n                <span><Icon type={'mail'} /><span>Impeller Count</span></span>\n              }>\n                <Menu.Item key=\"impellerCount\">\n                  <span>Count</span>\n                  <InputNumber size=\"small\" min={1} defaultValue={this.state.impellerCount} onChange={(value) => this.handleChange('impellerCount', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n\n              {[...Array(this.state.impellerCount)].map((val, idx) => {\n                return (\n                  <Menu.SubMenu className=\"subMenu\" key={`impeller-${idx}`} title={\n                    <span><Icon type={'mail'} /><span>Impeller {idx + 1}</span></span>\n                  }>\n\n                    <Menu.SubMenu className=\"subMenu\" key={`hub-${idx}`} title={\n                      <span><Icon type={'mail'} /><span>Hub</span></span>\n                    }>\n                      <Menu.Item key={`hubRadius-${idx}`}>\n                        <span>Radius</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.hubRadius[0]} onChange={(value) => this.handleImpellerChange('hubRadius', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`hubHeight-${idx}`}>\n                        <span>Height</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.hubHeight[0]} onChange={(value) => this.handleImpellerChange('hubHeight', value, idx)} />\n                      </Menu.Item>\n                    </Menu.SubMenu>\n                    <Menu.SubMenu className=\"subMenu\" key={`disk-${idx}`} title={\n                      <span><Icon type={'mail'} /><span>Disk</span></span>\n                    }>\n                      <Menu.Item key={`diskRadius-${idx}`}>\n                        <span>Radius</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.diskRadius[0]} onChange={(value) => this.handleImpellerChange('diskRadius', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`diskHeight-${idx}`}>\n                        <span>Height</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.diskHeight[0]} onChange={(value) => this.handleImpellerChange('diskHeight', value, idx)} />\n                      </Menu.Item>\n                    </Menu.SubMenu>\n                    <Menu.SubMenu className=\"subMenu\" key={`blade-${idx}`} title={\n                      <span><Icon type={'mail'} /><span>Blade</span>\n                      </span>\n                    }>\n                      <Menu.Item key={`bladeCount-${idx}`}>\n                        <span>Count</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.bladeCount[0]} onChange={(value) => this.handleImpellerChange('bladeCount', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`bladeInnerRadius-${idx}`}>\n                        <span>Inner Radius</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.bladeInnerRadius[0]} onChange={(value) => this.handleImpellerChange('bladeInnerRadius', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`bladeOuterRadius-${idx}`}>\n                        <span>Outer Radius</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.bladeOuterRadius[0]} onChange={(value) => this.handleImpellerChange('bladeOuterRadius', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`bladeWidth-${idx}`}>\n                        <span>Width</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.bladeWidth[0]} onChange={(value) => this.handleImpellerChange('bladeWidth', value, idx)} />\n                      </Menu.Item>\n                      <Menu.Item key={`bladeHeight-${idx}`}>\n                        <span>Height</span>\n                        <InputNumber size=\"small\" min={1} defaultValue={this.state.bladeHeight[0]} onChange={(value) => this.handleImpellerChange('bladeHeight', value, idx)} />\n                      </Menu.Item>\n                    </Menu.SubMenu>\n\n                  </Menu.SubMenu>\n                )\n              })}\n\n              <Menu.SubMenu className=\"subMenu\" key=\"autoRotate\" title={\n                <span><Icon type={'mail'} /><span>Auto Rotate</span></span>\n              }>\n                <Menu.Item key=\"bladeAutoRotate\">\n                  <Checkbox checked={this.state.kernelAutoRotation} onChange={this.handleAutoRotation.bind(this)}>\n                    <span className=\"ant-menu-control\">Auto Rotation</span>\n                  </Checkbox>\n                </Menu.Item>\n                <Menu.Item key=\"bladeKernel\">\n                  <Radio.Group onChange={this.handleRadio.bind(this)} value={this.state.kernelRotationDir}>\n                    <Radio value=\"clockwise\">\n                      <span className=\"ant-menu-control\">Clockwise</span>\n                    </Radio>\n                    <Radio value=\"counter-clockwise\">\n                      <span className=\"ant-menu-control\">Counter-Clockwise</span>\n                    </Radio>\n                  </Radio.Group>\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu className=\"translucent subMenu\" key=\"translucent\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'translucent' ? 'environment' : 'mail'} />\n                  <span style={{fontWeight: this.state.hoverObject === 'translucent' ? 'bold' : 'normal'}}>Output Plane</span>\n                </span>\n              }>\n                <Menu.Item className=\"testClass\" key=\"menuitem15\">\n                  <span className=\"trans-pan\">XY Plane</span>\n                  <Checkbox className=\"transCheck\" onChange={(value) => this.handleTransEnable('transEnableXY', value)}></Checkbox>\n                  <InputNumber size=\"small\" min={this.state.tankDiameter * -0.5} max={this.state.tankDiameter * 0.5} defaultValue={this.state.transPanXY} onChange={(value) => this.handleChange('transPanXY', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem16\">\n                  <span className=\"trans-pan\">YZ Plane</span>\n                  <Checkbox className=\"transCheck\" onChange={(value) => this.handleTransEnable('transEnableYZ', value)}></Checkbox>\n                  <InputNumber size=\"small\" min={this.state.tankDiameter * -0.5} max={this.state.tankDiameter * 0.5} defaultValue={this.state.transPanYZ} onChange={(value) => this.handleChange('transPanYZ', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem17\">\n                  <span className=\"trans-pan\">XZ Plane</span>\n                  <Checkbox className=\"transCheck\" onChange={(value) => this.handleTransEnable('transEnableXZ', value)}></Checkbox>\n                  <InputNumber size=\"small\" min={this.state.tankHeight * -0.5} max={this.state.tankHeight * 0.5} defaultValue={this.state.transPanXZ} onChange={(value) => this.handleChange('transPanXZ', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem18\">\n                  <span className=\"trans-pan\">Rotate Plane</span>\n                  <Checkbox className=\"transCheck\" onChange={(value) => this.handleTransEnable('transEnableRotate', value)}></Checkbox>\n                  <InputNumber size=\"small\" min={0} max={360} defaultValue={this.state.transRotateAngle} onChange={(value) => this.handleChange('transRotateAngle', value)} />\n                </Menu.Item>\n                {/* <Menu.Item key=\"menuitem19\">\n                  <span className=\"trans-pan\">Impeller Plane</span>\n                  <Checkbox className=\"transCheck\" onChange={(value) => this.handleTransEnable('transEnableImpeller', value)}></Checkbox>\n                </Menu.Item> */}\n              </Menu.SubMenu>\n            </Menu>\n          </Sider>\n        </Layout>\n      </div>\n    );\n  }\n}\n//  onClick={ev => {this.handleSetting(\"load\")}}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}